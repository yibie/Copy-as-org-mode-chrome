/*! For license information please see background.js.LICENSE.txt */
(()=>{"use strict";class e{static sendToTab(e,t){return chrome.tabs.sendMessage(e,t)}static sendToBg(e){return chrome.runtime.sendMessage(e)}}var t;!function(e){e[e.inPagePopup=0]="inPagePopup",e[e.notificationApi=1]="notificationApi",e[e.none=2]="none"}(t||(t={}));const o=function(e){const t=[];for(const o in e)o.match(/^\d+$/)||t.push(o);return t}(t);function n(e,t){return Object.assign({},e,t)}function r(e){return JSON.parse(JSON.stringify(e))}const i=new class{constructor(){chrome.storage.sync?this.area=chrome.storage.sync:this.area=chrome.storage.local}getDefaultData(){return{apiLevel:1,listIndentSize:2,ulBulletChar:"-",olBulletChar:".",codeChar:"=",rubyHandleMethod:"removeRuby",codeBlockStyle:"beginEnd",escapeHtmlEntities:!1,squareBracketsInLink:"replaceWithRoundBrackets",insertReferenceLink:{enabled:!1,pos:"append",format:"-----\nOriginal Reference: [[%url%][%title%]]\n(Retrieved at [%datetime%])\n"},titleBlackList:"",convertImageAsDataUrl:!1,notificationMethod:"inPagePopup",decodeUri:!0,autoConvertPageUrl:!1}}setDataPartially(e){console.log("[SET] TO STORAGE",r(e)),this.area.set(r(e))}getData(){return this.area.get().then((e=>{let t=!1;const n=e;console.log("[GET] ORIGINAL",r(n));const i=this.getDefaultData();if(!n)return this.setDataPartially(i),i;const a=this.getDefaultData();for(const e in a){const o=e;void 0!==n[o]?a[o]=n[o]:t=!0}var c,s;void 0===n.apiLevel&&(a.notificationMethod=(c=a.notificationMethod,(s=o).includes(c)?c:s[0]),a.insertReferenceLink.format=i.insertReferenceLink.format,a.apiLevel=1);e:for(;a.apiLevel!==i.apiLevel;)switch(a.apiLevel){case void 0:a.apiLevel=1;continue e;case 1:break;default:a.apiLevel}return console.log("[GET] FIXED",a),t&&this.setDataPartially(a),a})).catch((e=>(console.error("Error when getting settings from browser.storage:",e),this.getDefaultData())))}onDataChanged(e){chrome.storage.onChanged.addListener(((t,o)=>{"sync"!==o&&"local"!==o||e(t)}))}},a=i.getDefaultData();function c(e,t){let o=e.substr(0,t);return e.length>t&&(o+="..."),o}function s(t,o){console.log("showBgNotification(), method =",a.notificationMethod,Date.now(),t,o),"inPagePopup"!==a.notificationMethod?"notificationApi"===a.notificationMethod&&(console.log("showBgNotification..."),chrome.notifications.create("default",{title:t,type:"basic",iconUrl:chrome.runtime.getURL("img/icon.png"),message:c(o,80)},(e=>{setTimeout((()=>{chrome.notifications.clear(e)}),800)})),console.log("showBgNotification finished.")):(t.replace(/[\n\r<>\\]/gi,"").replace(/["'`]/gi,"'"),o.replace(/[\n\r<>\\]/gi,"").replace(/["'`]/gi,"'"),chrome.tabs.query({active:!0,currentWindow:!0}).then((n=>{for(const r of n){if(void 0===r.id)return;e.sendToTab(r.id,{type:"showInPageNotification",title:t,message:c(o,100),duration:800})}})))}async function l(e,t){if(console.log("bgCopyToClipboard() start",Date.now(),"text ===",e),!e)return console.warn("text is empty, skip.",e),s("Oops...","Got nothing to copy..."),!1;try{console.log("Getting active tab...");const[t]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!t.id)throw new Error("No active tab found");console.log("Active tab found:",t.id),console.log("Executing copy script...");const o=await chrome.scripting.executeScript({target:{tabId:t.id},func:e=>new Promise((t=>{console.log("Creating textarea...");const o=document.createElement("textarea");o.style.position="fixed",o.style.left="-9999px",o.value=e,document.body.appendChild(o);try{console.log("Selecting text..."),o.select(),console.log("Executing copy command...");const e=document.execCommand("copy");console.log("Copy command result:",e),t(e)}catch(e){console.error("Copy failed:",e),t(!1)}finally{document.body.removeChild(o)}})),args:[e]});if(console.log("Script execution results:",o),o&&o[0]&&!0===o[0].result)return console.log("Copy successful, showing notification..."),s("Org-Mode Text Copied Successfully!",e),!0;throw new Error("Copy operation failed")}catch(e){return console.error("Failed to copy text:",e),s("Copy Failed","Failed to copy text to clipboard"),!1}}console.log("[background] first time to get config from storage"),i.getData().then((e=>{n(a,e)})),i.onDataChanged((async e=>{console.log("[background] storage changed!",e),n(a,await i.getData())})),chrome.runtime.onInstalled.addListener((()=>{chrome.contextMenus.removeAll((()=>{chrome.contextMenus.create({id:"save-page-as-org",title:"Save Page as Org-Mode",contexts:["page","frame"],documentUrlPatterns:["<all_urls>"]}),chrome.contextMenus.create({id:"copy-link-as-org-mode",title:"Copy Link as Org-Mode",contexts:["link"],documentUrlPatterns:["<all_urls>"]}),chrome.contextMenus.create({id:"copy-selection-as-org-mode",title:"Copy Selection as Org-Mode",contexts:["selection"],documentUrlPatterns:["<all_urls>"]}),chrome.contextMenus.create({id:"copy-current-page-url-as-org-mode",title:"Copy Page as Org-Mode Link",contexts:["page"],documentUrlPatterns:["<all_urls>"]})}))})),Date.now(),chrome.contextMenus.onClicked.addListener((async(e,t)=>{if(!t?.id)return;const o=t.id;if(await async function(e){try{const t=(await chrome.tabs.get(e)).url||"";return t.startsWith("http")||t.startsWith("https")}catch(e){return console.error("Error checking tab:",e),!1}}(o)){if("save-page-as-org"===e.menuItemId)try{await async function(e){try{await chrome.scripting.executeScript({target:{tabId:e},files:["dist/content-script.js"]});const t=await chrome.scripting.executeScript({target:{tabId:e},func:e=>{try{const t=(document.querySelector("article")||document.body).innerHTML,o=document.createElement("div");o.innerHTML=t;const n=window.html2org.convert(o.innerHTML,e);return{title:document.title,content:n,url:document.URL,author:document.querySelector('meta[name="author"]')?.getAttribute("content")||"",description:document.querySelector('meta[name="description"]')?.getAttribute("content")||""}}catch(e){return console.error("Error in content script:",e),null}},args:[{unorderedListMarker:a.ulBulletChar,orderedListMarker:a.olBulletChar,codeDelimiter:a.codeChar,listIndentSize:a.listIndentSize,codeBlockStyle:a.codeBlockStyle,decodeUri:a.decodeUri,squareBracketsInLink:a.squareBracketsInLink,ruby:a.rubyHandleMethod}]});if(!t?.[0]?.result)throw new Error("Failed to get page content");const{title:o,content:n,url:r,author:i,description:c}=t[0].result;let s=`#+TITLE: ${o}\n`;s+=`#+DATE: ${(new Date).toISOString()}\n`,i&&(s+=`#+AUTHOR: ${i}\n`),s+=`#+SOURCE_URL: ${r}\n\n`,c&&(s+=`* Abstract\n\n${c}\n\n`),s+=`* Content\n\n${n}`;const l="data:text/org;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(s)));await chrome.downloads.download({url:l,filename:`${o.replace(/[<>:"/\\|?*]/g,"_")}.org`,saveAs:!0})}catch(e){console.error("Failed to save page:",e),s("Error",`Failed to save page: ${e instanceof Error?e.message:"Unknown error"}`)}}(o)}catch(e){console.error("Failed to execute script:",e),s("Error",`Failed to process page content: ${e instanceof Error?e.message:"Unknown error"}`)}else if("copy-current-page-url-as-org-mode"===e.menuItemId)try{const[e]=await chrome.tabs.query({active:!0,currentWindow:!0});if(!e.url||!e.title)throw new Error("Cannot get page information");const t=`[[${e.url}][${e.title}]]`;await l(t,(e.url,e.title))}catch(e){console.error("Failed to copy page link:",e),s("Error",`Failed to copy page link: ${e instanceof Error?e.message:"Unknown error"}`)}else if("copy-selection-as-org-mode"===e.menuItemId)try{await chrome.scripting.executeScript({target:{tabId:t.id},files:["dist/copy.js"]}),await chrome.scripting.executeScript({target:{tabId:t.id},func:()=>window.main()})}catch(e){console.error("Failed to copy selection:",e),s("Error",`Failed to copy selection: ${e instanceof Error?e.message:"Unknown error"}`)}else if("copy-link-as-org-mode"===e.menuItemId)try{await chrome.scripting.executeScript({target:{tabId:o},files:["dist/copy-link.js"]});const t=e;if(!t.linkText||!t.linkUrl)throw new TypeError("Missing link information");const n=t.linkText.replace(/([\\`*_[\]<>])/g,"\\$1");let r=t.linkUrl;console.log("Options ===>",a),a.decodeUri&&(r=function(e){try{return decodeURI(e)}catch(t){return console.error("[ERROR] decodeURI error",t),e}}(r)),l(`[[${r}][${n}]]`)}catch(e){console.error("Failed to process link:",e),s("Error",`Failed to copy link: ${e instanceof Error?e.message:"Unknown error"}`)}}else s("Error","Cannot execute script on this page")})),chrome.action.onClicked.addListener((e=>{console.log("[DEBUG] browserAction.onclicked",e),chrome.scripting.executeScript({target:{tabId:e.id??-1},files:["dist/copy.js"]})})),chrome.runtime.onMessage.addListener(((e,t,o)=>{const n=e;switch(n.type){case"showBgNotification":s(n.title,n.message);break;case"copyStringToClipboard":return console.log("listener: copy request",Date.now()),l(n.org,n.html).then((e=>{o({success:e})})),!0}}))})();